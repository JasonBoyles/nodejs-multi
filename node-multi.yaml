heat_template_version: 2013-05-23

description: |
  Heat template to deploy a multi-server Node.js deployment

parameters:
  server_hostnames:
    label: Server Name
    description: Server Name
    type: string
    default: nodejs-%index%
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9%-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  db_hostname:
    label: Server Name
    description: Server Name
    type: string
    default: nodejs-db
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  database_username:
    label: Database Username
    description: Database Username
    type: string
    default: 'nodejs'

  load_balancer_hostname:
    label: Load Balancer Hostname
    description: Hostname for the Cloud Load Balancer
    type: string
    default: nodejs-app-load-balancer
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  nodejs_app_server_count:
    label: Server Count
    description: |
      Required: Number of servers to spin up as a part of this deployment.
    type: number
    default: 2
    constraints:
    - range:
        min: 1
        max: 25
      description: Must be between 1 and 25 servers.

  image:
    label: Operating System
    description: |
      Required: Server image used for all servers that are created as a part of
      this deployment.
    type: string
    default: Ubuntu 12.04 LTS (Precise Pangolin)
    constraints:
    - allowed_values:
      - Ubuntu 12.04 LTS (Precise Pangolin)
      description: Must be a supported operating system.

  flavor:
    label: Server Size
    description: |
      Required: Rackspace Cloud Server flavor to use. The size is based on the
      amount of RAM for the provisioned server.
    type: string
    default: 4 GB Performance
    constraints:
    - allowed_values:
      - 1 GB Performance
      - 2 GB Performance
      - 4 GB Performance
      - 8 GB Performance
      - 15 GB Performance
      - 30 GB Performance
      - 60 GB Performance
      - 90 GB Performance
      - 512MB Standard Instance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  db_flavor:
    label: Server Size
    description: |
      Required: Rackspace Cloud Server flavor to use. The size is based on the
      amount of RAM for the provisioned server.
    type: string
    default: 4 GB Performance
    constraints:
    - allowed_values:
      - 1 GB Performance
      - 2 GB Performance
      - 4 GB Performance
      - 8 GB Performance
      - 15 GB Performance
      - 30 GB Performance
      - 60 GB Performance
      - 90 GB Performance
      - 512MB Standard Instance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  app_git_url:
    type: string
    default: ''

  app_git_revision:
    type: string
    default: master

  app_git_deploy_key:
    type: string
    default: ''

  kitchen:
    description: URL for the kitchen to use
    type: string
    default: https://github.com/brint/nodejs-multi

  chef_version:
    description: Version of chef client to use
    type: string
    default: 11.14.2

  child_template:
    type: string
    default: https://raw.github.com/brint/nodejs-multi/master/node-web.yaml

resources:
  ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  load_balancer:
    type: "Rackspace::Cloud::LoadBalancer"
    #depends_on: nodejs_app_servers
    properties:
      name: { get_param: load_balancer_hostname }
      nodes:
      - addresses: { get_attr: [nodejs_app_servers, private_ip] }
        port: 80
        condition: ENABLED
      port: 80
      protocol: HTTP
      algorithm: ROUND_ROBIN
      contentCaching: DISABLED
      virtualIps:
      - type: PUBLIC
        ipVersion: IPV4
      metadata:
        rax-heat: { get_param: "OS::stack_id" }

  database_user_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  db_admin_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  mysql_repl_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  mysql_debian_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  database_server:
    type: "Rackspace::Cloud::Server"
    properties:
      name: { get_param: "db_hostname" }
      flavor: { get_param: db_flavor }
      image: { get_param: image }
      key_name: { get_resource: ssh_key }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }

  database_server_setup:
    type: "OS::Heat::ChefSolo"
    depends_on: database_server
    properties:
      username: root
      private_key: { get_attr: [ssh_key, private_key] }
      host: { get_attr: [database_server, accessIPv4] }
      kitchen: { get_param: kitchen }
      chef_version: { get_param: chef_version }
      node:
        mysql:
          server_root_password: { get_attr: [db_admin_password, value] }
          server_repl_password: { get_attr: [mysql_repl_password, value] }
          server_debian_password: { get_attr: [mysql_debian_password, value] }
          remove_test_database: true
          remove_anonymous_users: true
        build-essential:
          compile_time: true
        run_list: ["recipe[apt]",
                   "recipe[mysql::server]"]

  nodejs_app_servers:
    type: "OS::Heat::ResourceGroup"
    depends_on: database_server_setup
    properties:
      count: { get_param: nodejs_app_server_count }
      resource_def:
        type: { get_param: child_template }
        properties:
          hostname: { get_param: server_hostnames }
          ssh_key_name: { get_resource: ssh_key }
          ssh_private_key: { get_attr: [ssh_key, private_key] }
          kitchen: { get_param: kitchen }
          chef_version: { get_param: chef_version }
          app_git_url: { get_param: app_git_url }
          app_git_revision: { get_param: app_git_revision }
          app_git_deploy_key: { get_param: app_git_deploy_key }
          db_server_ip: { get_attr: [database_server, privateIPv4] }
          database_username: { get_param: database_username }
          database_user_password: { get_resource: database_user_password }

outputs:
  private_key:
    description: SSH Private Key
    value: { get_attr: [ssh_key, private_key] }
